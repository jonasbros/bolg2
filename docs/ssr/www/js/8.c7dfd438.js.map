{"version":3,"sources":["webpack:///./src/pages/NewPost.vue?3b4a","webpack:///./src/pages/NewPost.vue?fa7e","webpack:///./src/pages/NewPost.vue?6c6d","webpack:///src/pages/NewPost.vue","webpack:///./src/pages/NewPost.vue?e57c","webpack:///./src/pages/NewPost.vue?709f"],"names":[],"mappings":"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","file":"js/8.c7dfd438.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-2-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-2-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-2-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-2-3!../../node_modules/@quasar/app/lib/webpack/loader.quasar-scss-variables.js!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewPost.vue?vue&type=style&index=0&lang=scss&\"","// extracted by mini-css-extract-plugin","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('q-page',{attrs:{\"padding\":\"\"}},[_c('div',{staticClass:\"row justify-center q-mt-xl\"},[_c('div',{staticClass:\"col-lg-6 col-md-8 col-sm-10 col-xs-12\"},[_c('q-form',{staticClass:\"q-gutter-md\",attrs:{\"autocorrect\":\"off\",\"autocapitalize\":\"off\",\"autocomplete\":\"off\",\"spellcheck\":\"false\"},on:{\"submit\":function($event){$event.preventDefault();return _vm.onSubmit($event)}}},[_c('q-input',{attrs:{\"label\":\"Title\",\"lazy-rules\":\"ondemand\",\"outlined\":\"\",\"color\":\"secondary\",\"rules\":[ function (val) { return val && val.length > 0 || 'Please type something'; } ]},model:{value:(_vm.title),callback:function ($$v) {_vm.title=$$v},expression:\"title\"}}),_c('q-editor',{attrs:{\"dense\":_vm.$q.screen.lt.md,\"toolbar\":[\n            [\n              {\n                label: _vm.$q.lang.editor.align,\n                icon: _vm.$q.iconSet.editor.align,\n                fixedLabel: true,\n                list: 'only-icons',\n                options: ['left', 'center', 'right', 'justify']\n              },\n              {\n                label: _vm.$q.lang.editor.align,\n                icon: _vm.$q.iconSet.editor.align,\n                fixedLabel: true,\n                options: ['left', 'center', 'right', 'justify']\n              }\n            ],\n            ['bold', 'italic', 'strike', 'underline', 'subscript', 'superscript'],\n            ['token', 'hr', 'link', 'custom_btn'],\n            ['print', 'fullscreen'],\n            [\n              {\n                label: _vm.$q.lang.editor.formatting,\n                icon: _vm.$q.iconSet.editor.formatting,\n                list: 'no-icons',\n                options: [\n                  'p',\n                  'h1',\n                  'h2',\n                  'h3',\n                  'h4',\n                  'h5',\n                  'h6',\n                  'code'\n                ]\n              },\n              {\n                label: _vm.$q.lang.editor.fontSize,\n                icon: _vm.$q.iconSet.editor.fontSize,\n                fixedLabel: true,\n                fixedIcon: true,\n                list: 'no-icons',\n                options: [\n                  'size-1',\n                  'size-2',\n                  'size-3',\n                  'size-4',\n                  'size-5',\n                  'size-6',\n                  'size-7'\n                ]\n              },\n              {\n                label: _vm.$q.lang.editor.defaultFont,\n                icon: _vm.$q.iconSet.editor.font,\n                fixedIcon: true,\n                list: 'no-icons',\n                options: [\n                  'default_font',\n                  'arial',\n                  'arial_black',\n                  'comic_sans',\n                  'courier_new',\n                  'impact',\n                  'lucida_grande',\n                  'times_new_roman',\n                  'verdana'\n                ]\n              },\n              'removeFormat'\n            ],\n            ['quote', 'unordered', 'ordered', 'outdent', 'indent'],\n\n            ['undo', 'redo'],\n            ['viewsource']\n          ],\"fonts\":{\n            arial: 'Arial',\n            arial_black: 'Arial Black',\n            comic_sans: 'Comic Sans MS',\n            courier_new: 'Courier New',\n            impact: 'Impact',\n            lucida_grande: 'Lucida Grande',\n            times_new_roman: 'Times New Roman',\n            verdana: 'Verdana'\n          }},model:{value:(_vm.body),callback:function ($$v) {_vm.body=$$v},expression:\"body\"}}),_c('q-input',{attrs:{\"outlined\":\"\",\"color\":\"secondary\",\"label\":\"Excerpt\",\"lazy-rules\":\"ondemand\",\"autogrow\":\"\",\"rules\":[ function (val) { return val && val.length > 0 || 'Please type something'; }]},model:{value:(_vm.excerpt),callback:function ($$v) {_vm.excerpt=$$v},expression:\"excerpt\"}}),_c('q-input',{attrs:{\"outlined\":\"\",\"color\":\"secondary\",\"label\":\"Tags\",\"hint\":\"Press TAB to add tag\"},on:{\"keydown\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"tab\",9,$event.key,\"Tab\")){ return null; }$event.preventDefault();return _vm.addTags($event)}}}),_vm._l((_vm.tags),function(tag,index){return _c('q-chip',{key:tag + index},[_vm._v(\"\\n          #\"+_vm._s(tag)+\"\\n        \")])}),_c('q-uploader',{staticStyle:{\"max-width\":\"100%\"},attrs:{\"label\":\"Upload Header Photo\",\"accept\":\".jpg, image/*\",\"color\":\"secondary\",\"hide-upload-btn\":\"\",\"flat\":\"\"},on:{\"rejected\":_vm.onRejected,\"added\":_vm.imageAdded}}),_c('div',[_c('q-btn',{attrs:{\"label\":\"Submit\",\"type\":\"submit\",\"color\":\"secondary\",\"loading\":_vm.disableButton,\"disable\":_vm.disableButton}})],1)],2)],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <q-page padding>\r\n    <div class=\"row justify-center q-mt-xl\">\r\n      <div class=\"col-lg-6 col-md-8 col-sm-10 col-xs-12\">\r\n        <q-form\r\n          autocorrect=\"off\"\r\n          autocapitalize=\"off\"\r\n          autocomplete=\"off\"\r\n          spellcheck=\"false\"\r\n          @submit.prevent=\"onSubmit\"\r\n          class=\"q-gutter-md\"\r\n        >\r\n          <q-input\r\n            v-model=\"title\"\r\n            label=\"Title\"\r\n            lazy-rules=\"ondemand\"\r\n            outlined\r\n            color=\"secondary\"\r\n            :rules=\"[ val => val && val.length > 0 || 'Please type something' ]\"\r\n          />\r\n\r\n          <q-editor\r\n            v-model=\"body\"\r\n            :dense=\"$q.screen.lt.md\"\r\n            :toolbar=\"[\r\n              [\r\n                {\r\n                  label: $q.lang.editor.align,\r\n                  icon: $q.iconSet.editor.align,\r\n                  fixedLabel: true,\r\n                  list: 'only-icons',\r\n                  options: ['left', 'center', 'right', 'justify']\r\n                },\r\n                {\r\n                  label: $q.lang.editor.align,\r\n                  icon: $q.iconSet.editor.align,\r\n                  fixedLabel: true,\r\n                  options: ['left', 'center', 'right', 'justify']\r\n                }\r\n              ],\r\n              ['bold', 'italic', 'strike', 'underline', 'subscript', 'superscript'],\r\n              ['token', 'hr', 'link', 'custom_btn'],\r\n              ['print', 'fullscreen'],\r\n              [\r\n                {\r\n                  label: $q.lang.editor.formatting,\r\n                  icon: $q.iconSet.editor.formatting,\r\n                  list: 'no-icons',\r\n                  options: [\r\n                    'p',\r\n                    'h1',\r\n                    'h2',\r\n                    'h3',\r\n                    'h4',\r\n                    'h5',\r\n                    'h6',\r\n                    'code'\r\n                  ]\r\n                },\r\n                {\r\n                  label: $q.lang.editor.fontSize,\r\n                  icon: $q.iconSet.editor.fontSize,\r\n                  fixedLabel: true,\r\n                  fixedIcon: true,\r\n                  list: 'no-icons',\r\n                  options: [\r\n                    'size-1',\r\n                    'size-2',\r\n                    'size-3',\r\n                    'size-4',\r\n                    'size-5',\r\n                    'size-6',\r\n                    'size-7'\r\n                  ]\r\n                },\r\n                {\r\n                  label: $q.lang.editor.defaultFont,\r\n                  icon: $q.iconSet.editor.font,\r\n                  fixedIcon: true,\r\n                  list: 'no-icons',\r\n                  options: [\r\n                    'default_font',\r\n                    'arial',\r\n                    'arial_black',\r\n                    'comic_sans',\r\n                    'courier_new',\r\n                    'impact',\r\n                    'lucida_grande',\r\n                    'times_new_roman',\r\n                    'verdana'\r\n                  ]\r\n                },\r\n                'removeFormat'\r\n              ],\r\n              ['quote', 'unordered', 'ordered', 'outdent', 'indent'],\r\n\r\n              ['undo', 'redo'],\r\n              ['viewsource']\r\n            ]\"\r\n            :fonts=\"{\r\n              arial: 'Arial',\r\n              arial_black: 'Arial Black',\r\n              comic_sans: 'Comic Sans MS',\r\n              courier_new: 'Courier New',\r\n              impact: 'Impact',\r\n              lucida_grande: 'Lucida Grande',\r\n              times_new_roman: 'Times New Roman',\r\n              verdana: 'Verdana'\r\n            }\"\r\n          />\r\n\r\n          <q-input\r\n            outlined\r\n            color=\"secondary\"\r\n            v-model=\"excerpt\"\r\n            label=\"Excerpt\"\r\n            lazy-rules=\"ondemand\"\r\n            autogrow\r\n            :rules=\"[ val => val && val.length > 0 || 'Please type something']\"\r\n          />\r\n\r\n          <q-input\r\n            outlined\r\n            color=\"secondary\"\r\n            @keydown.tab.prevent=\"addTags\"\r\n            label=\"Tags\"\r\n            hint=\"Press TAB to add tag\"\r\n          />\r\n\r\n          <q-chip v-for=\"(tag, index) in tags\" :key=\"tag + index\">\r\n            #{{ tag }}\r\n          </q-chip>\r\n\r\n\r\n          <q-uploader\r\n            style=\"max-width: 100%\"\r\n            label=\"Upload Header Photo\"\r\n            accept=\".jpg, image/*\"\r\n            color=\"secondary\"\r\n            hide-upload-btn\r\n            flat\r\n            @rejected=\"onRejected\"\r\n            @added=\"imageAdded\"\r\n          />\r\n\r\n          <div>\r\n            <q-btn \r\n              label=\"Submit\"\r\n              type=\"submit\"\r\n              color=\"secondary\"\r\n              :loading=\"disableButton\"\r\n              :disable=\"disableButton\"\r\n            />\r\n              \r\n          </div>\r\n        </q-form>\r\n      </div>\r\n    </div>\r\n  </q-page>\r\n</template>\r\n\r\n<script>\r\nimport { firebase, timestamp } from './../firebase/config.js';\r\nimport { compress } from 'image-conversion';\r\n\r\nexport default {\r\n  name: 'NewPost',\r\n  data() {\r\n    return {\r\n      title: '',\r\n      body: '',\r\n      picture: '',\r\n      excerpt: '',\r\n      disableButton: false,\r\n      tags: [],\r\n    }\r\n  },\r\n  computed: {\r\n    keywords() {\r\n      let keywords = [];\r\n      let duplicateCapitalizedWords = [];\r\n\r\n      keywords = this.title\r\n        .split(\" \")\r\n        .filter((word) => {\r\n          let nonKeywords = ['and', 'the', 'The', 'And'];\r\n          return ( word.length >= 3 && !nonKeywords.includes(word) );\r\n        })\r\n        .map((word) => {\r\n          if( /[A-Z]/.test(word.charAt(0)) ) {\r\n            duplicateCapitalizedWords.push(word);\r\n          }\r\n          return word.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\r\n        });\r\n\r\n      keywords.push(...duplicateCapitalizedWords);\r\n\r\n      return keywords;\r\n    }\r\n  },\r\n  methods: {\r\n    async onSubmit() {\r\n      //body is blank\r\n      if( !this.body ) {\r\n        this.$q.notify({\r\n          type: 'negative',\r\n          message: 'Please type something in the body.'\r\n        });\r\n\r\n        return;\r\n      }\r\n      //body is not blank\r\n      let db = firebase.firestore();\r\n      let userInfo = this.$store.getters['example/getAuthUser'];\r\n      console.log(this.keywords);\r\n      this.$q.loading.show();\r\n      this.disableButton = true;\r\n      // save\r\n      await db.collection('posts').add({\r\n        title: this.title.trim(),\r\n        body: this.body,\r\n        postPicture: this.picture,\r\n        comments: 0,\r\n        likes: 0,\r\n        createdAt: timestamp(),\r\n        userId: userInfo.uid,\r\n        userName: userInfo.displayName,\r\n        userPicture: userInfo.photoURL,\r\n        excerpt: this.excerpt,\r\n        slug: this.title.replaceAll(\" \", \"-\"),\r\n        tags: this.tags,\r\n        keywords: this.keywords,\r\n      });\r\n      // after save\r\n      this.$q.loading.hide();\r\n      this.disableButton = false;\r\n      this.$router.push({ name: 'Home' });\r\n    },\r\n    async imageAdded(imageFile) {\r\n      let imageId = new Date().valueOf();\r\n      let storageRef = firebase.storage().ref(`photos/${imageId}.jpg`);\r\n      //added photo\r\n      this.disableButton = true;\r\n      //compress photo\r\n      let compressedPhoto = await compress(imageFile[0], {\r\n        quality: 0.8,\r\n        type: \"image/jpeg\",\r\n        scale: 0.75,\r\n      });\r\n      //upload photo\r\n      let imageSnap = await storageRef.put(compressedPhoto, { contentType: 'image/jpeg' });\r\n      //get photo download URL\r\n      this.picture = await imageSnap.ref.getDownloadURL();\r\n      this.disableButton = false;\r\n    },\r\n    onRejected() {\r\n      this.$q.notify({\r\n        type: 'negative',\r\n        message: 'Only images are allowed'\r\n      }) \r\n    },\r\n    addTags(e) {\r\n      if( e.target.value ) {\r\n        this.tags.push(e.target.value);\r\n        e.target.value = \"\";\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  .q-uploader {\r\n    width: auto;\r\n  }\r\n\r\n  .q-uploader__subtitle {\r\n    display: none;\r\n  }\r\n\r\n  .q-uploader__list.scroll {\r\n    padding-left: 0;\r\n    padding-right: 0;\r\n  }\r\n\r\n  .q-editor__toolbar-group .text-primary {\r\n    color: $secondary !important;\r\n  }\r\n</style>","import mod from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewPost.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewPost.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NewPost.vue?vue&type=template&id=141a6891&\"\nimport script from \"./NewPost.vue?vue&type=script&lang=js&\"\nexport * from \"./NewPost.vue?vue&type=script&lang=js&\"\nimport style0 from \"./NewPost.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\nimport QPage from 'quasar/src/components/page/QPage.js';\nimport QForm from 'quasar/src/components/form/QForm.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QEditor from 'quasar/src/components/editor/QEditor.js';\nimport QChip from 'quasar/src/components/chip/QChip.js';\nimport QUploader from 'quasar/src/components/uploader/QUploader.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../node_modules/@quasar/app/lib/webpack/runtime.auto-import.js\";\nqInstall(component, 'components', {QPage,QForm,QInput,QEditor,QChip,QUploader,QBtn});\n"],"sourceRoot":""}